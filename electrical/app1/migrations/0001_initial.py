# Generated by Django 4.0.2 on 2022-03-07 06:20

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('door_number', models.BigIntegerField(null=True)),
                ('street', models.CharField(max_length=200, null=True)),
                ('city', models.CharField(max_length=200, null=True)),
                ('state', models.CharField(max_length=200, null=True)),
                ('country', models.CharField(max_length=200, null=True)),
                ('pincode', models.IntegerField(null=True)),
                ('phone_no', models.BigIntegerField(null=True, verbose_name='Phone')),
                ('alternate_phone_no', models.BigIntegerField(blank=True, null=True, verbose_name='Alternate Phone')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Customer Address',
            },
        ),
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Color', models.CharField(max_length=50, null=True, verbose_name='Color')),
                ('Size', models.CharField(max_length=20, null=True, verbose_name='Size')),
            ],
            options={
                'verbose_name_plural': 'Attributes',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('image', models.FileField(blank=True, null=True, upload_to='Banner')),
                ('uploaded_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brands', models.CharField(max_length=50, verbose_name='Brands')),
                ('description', models.TextField(blank=True, verbose_name='Category Description')),
                ('category_image', models.ImageField(blank=True, max_length=500, null=True, upload_to='category', verbose_name='Brand Thumbnail')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
            ],
            options={
                'verbose_name_plural': ' Category',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon', models.CharField(max_length=200, null=True, verbose_name='Coupon')),
                ('coupon_discount', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created Date')),
            ],
            options={
                'verbose_name_plural': 'Coupons',
            },
        ),
        migrations.CreateModel(
            name='customer_message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50, null=True)),
                ('Email', models.EmailField(max_length=50, null=True)),
                ('Phone', models.BigIntegerField(blank=True, null=True)),
                ('Message', models.TextField(max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'Customer messages',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Question', models.CharField(max_length=100, null=True)),
                ('Answer', ckeditor.fields.RichTextField(max_length=300, null=True)),
            ],
            options={
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Product Title')),
                ('sku', models.CharField(max_length=255, unique=True, verbose_name='Unique Product ID (SKU)')),
                ('short_description', ckeditor.fields.RichTextField(verbose_name='Short Description')),
                ('detail_description', models.TextField(blank=True, null=True, verbose_name='Detail Description')),
                ('product_image', models.ImageField(blank=True, max_length=500, null=True, upload_to='product', verbose_name='Product Thumbnail')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Price(₹)')),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Offer Price(₹)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.category', verbose_name='Product Brands')),
                ('image', models.ManyToManyField(blank=True, to='app1.image')),
            ],
            options={
                'verbose_name_plural': '  Products',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_name', models.CharField(max_length=200, null=True, verbose_name='Campaign name')),
                ('startdate', models.DateField(null=True, verbose_name='Start Date')),
                ('enddate', models.DateField(null=True, verbose_name='End Date')),
                ('sales_discount', models.DecimalField(decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)], verbose_name='Discount(%)')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created Date')),
            ],
            options={
                'verbose_name_plural': 'Sales/Discount',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reviews', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('Rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('Status', models.CharField(choices=[('Reject', 'Reject'), ('Approve', 'Approved')], max_length=8)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.product', verbose_name='Product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Price(₹)')),
                ('ordered_date', models.DateTimeField(auto_now_add=True, verbose_name='Ordered Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created Date')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Packed', 'Packed'), ('On The Way', 'On The Way'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Pending', max_length=50)),
                ('address', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='app1.address', verbose_name='Shipping Address')),
                ('attributes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.attributes', verbose_name=' Product Attributes')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app1.coupon')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.product', verbose_name='Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Order',
            },
        ),
        migrations.CreateModel(
            name='MailText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField(null=True)),
                ('send_it', models.BooleanField(default=False)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email marketing',
                'verbose_name_plural': 'Email marketing',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('author', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('url', embed_video.fields.EmbedVideoField(blank=True, null=True)),
                ('images', models.ImageField(null=True, upload_to='blog')),
                ('uploaded_date', models.DateField(auto_now_add=True)),
                ('image', models.ManyToManyField(blank=True, to='app1.image')),
            ],
        ),
        migrations.AddField(
            model_name='attributes',
            name='Product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.product', verbose_name='Product'),
        ),
    ]
